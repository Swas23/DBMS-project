package com.mycompany.dbmsproj;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.naming.spi.DirStateFactory.Result;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SWASTHIK
 */
public class Trainers extends javax.swing.JFrame {
int b;
    /**
     * Creates new form Trainers
     */

    public Trainers(int a) throws SQLException{
        b=a;
        initComponents();
        populateTrainerIDs();
     
        setExtendedState(Trainers.MAXIMIZED_BOTH);
        if(b==0){
            jLabel1.setVisible(false);
            jLabel7.setVisible(false);
            textFieldName.setVisible(false);
            jLabel10.setVisible(false);
            textFieldSalary.setVisible(false);
            jLabel8.setVisible(false);
            textFieldEmail.setVisible(false);
            jLabel11.setVisible(false);
            textFieldJoinDate.setVisible(false);
            jLabel9.setVisible(false);
            textFieldPhone.setVisible(false);
            jLabel12.setVisible(false);
            textFieldSpecialization.setVisible(false);
            Insert.setVisible(false);
            jLabel13.setVisible(false);
            trainerDEL_TextField.setVisible(false);
            jLabel14.setVisible(false);
            jButton2.setVisible(false);
            jLabel15.setVisible(false);
            jComboBoxUpdateTID.setVisible(false);
            jLabel16.setVisible(false);
            jLabel18.setVisible(false);
            updNametext.setVisible(false);
            jLabel19.setVisible(false);
            updEmailtext.setVisible(false);
            jLabel20.setVisible(false);
            updPhonetext.setVisible(false);
            jLabel21.setVisible(false);
            updSalarytext.setVisible(false);
            jLabel22.setVisible(false);
            updJoindatetext.setVisible(false);
            jLabel23.setVisible(false);
            updSpectext.setVisible(false);
            trainerUpdate.setVisible(false);
            jPanel1.setVisible(false);
            jPanel3.setVisible(false);
            jPanel4.setVisible(false);
        }
    }

    
    
    private Trainers() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
private void populateTrainerIDs() {
    try {
        // Establish database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Clear existing items in the JComboBox
        jComboBoxUpdateTID.removeAllItems();

        // Execute SQL query to fetch Trainer IDs
        String query = "SELECT T_ID FROM trainers";
        try (Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
            while (rs.next()) {
                Object tID = rs.getObject("T_ID");
                jComboBoxUpdateTID.addItem(tID.toString());
            }
        }

        // Close the database connection
        con.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxSort = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonSort = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldSpecialization = new javax.swing.JTextField();
        jButtonSpecializationSort = new javax.swing.JButton();
        trainer_back = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textFieldEmail = new javax.swing.JTextField();
        Insert = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textFieldPhone = new javax.swing.JTextField();
        textFieldSalary = new javax.swing.JTextField();
        textFieldJoinDate = new javax.swing.JTextField();
        textFieldSpecialization = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        trainerDEL_TextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxUpdateTID = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        trainerUpdate = new javax.swing.JButton();
        updNametext = new javax.swing.JTextField();
        updEmailtext = new javax.swing.JTextField();
        updPhonetext = new javax.swing.JTextField();
        updSalarytext = new javax.swing.JTextField();
        updJoindatetext = new javax.swing.JTextField();
        updSpectext = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1920, 1080));

        jPanel2.setBackground(new java.awt.Color(153, 0, 51));
        jPanel2.setPreferredSize(new java.awt.Dimension(960, 1080));

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "T_ID", "Name", "E-mail", "Phone", "Salary", "Join_date", "Specialization"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jButton1.setText("View All");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Filters : ");

        jComboBoxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salary ( Min - Max)", "Salary ( Max-Min)", "Join_Date(Aescending)", "Join_Date(Descending)", " ", " " }));
        jComboBoxSort.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSortActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sort By");

        jButtonSort.setBackground(new java.awt.Color(204, 204, 204));
        jButtonSort.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        jButtonSort.setText("Sort");
        jButtonSort.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Specialization");

        jTextFieldSpecialization.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jTextFieldSpecialization.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jButtonSpecializationSort.setBackground(new java.awt.Color(204, 204, 204));
        jButtonSpecializationSort.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        jButtonSpecializationSort.setText("Search");
        jButtonSpecializationSort.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSpecializationSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSpecializationSortActionPerformed(evt);
            }
        });

        trainer_back.setBackground(new java.awt.Color(204, 204, 204));
        trainer_back.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        trainer_back.setText("<");
        trainer_back.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        trainer_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainer_backActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Trainer Management");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 51), 2));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setText("ADD New Trainer : ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 41));

        jLabel7.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("Name : ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 60, 36));

        textFieldName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNameActionPerformed(evt);
            }
        });
        jPanel1.add(textFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 143, 36));

        jLabel8.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 51));
        jLabel8.setText("E-mail : ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 60, 35));

        textFieldEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldEmail.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldEmailActionPerformed(evt);
            }
        });
        jPanel1.add(textFieldEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 143, 40));

        Insert.setBackground(new java.awt.Color(153, 0, 51));
        Insert.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        Insert.setForeground(new java.awt.Color(255, 255, 255));
        Insert.setText("INSERT");
        Insert.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });
        jPanel1.add(Insert, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 70, 40));

        jLabel12.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 0, 51));
        jLabel12.setText("Specialization :");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 120, 32));

        jLabel11.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 51));
        jLabel11.setText("Join-Date : ");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 90, 33));

        jLabel10.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 51));
        jLabel10.setText("Salary : ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 70, 36));

        jLabel9.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 51));
        jLabel9.setText("Phone : ");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 70, 34));

        textFieldPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldPhone.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPhoneActionPerformed(evt);
            }
        });
        jPanel1.add(textFieldPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 150, 40));

        textFieldSalary.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldSalary.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textFieldSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSalaryActionPerformed(evt);
            }
        });
        jPanel1.add(textFieldSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 140, 40));

        textFieldJoinDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldJoinDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(textFieldJoinDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, 140, 40));

        textFieldSpecialization.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldSpecialization.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(textFieldSpecialization, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 140, 40));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 51), 2));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 0, 51));
        jLabel13.setText("DELETE Trainer : ");

        jLabel14.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 0, 51));
        jLabel14.setText("Enter T_ID :");

        trainerDEL_TextField.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        trainerDEL_TextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        trainerDEL_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerDEL_TextFieldActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 0, 51));
        jButton2.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("DELETE");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 55, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(trainerDEL_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trainerDEL_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 51), 2));
        jPanel4.setForeground(new java.awt.Color(153, 0, 51));

        jLabel15.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 0, 51));
        jLabel15.setText("UPDATE Trainer : ");

        jLabel16.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 0, 51));
        jLabel16.setText("Select : ");

        jComboBoxUpdateTID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxUpdateTID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUpdateTIDActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(153, 0, 51));
        jLabel18.setText("Name :");

        jLabel19.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 0, 51));
        jLabel19.setText("E-mail :");

        jLabel20.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(153, 0, 51));
        jLabel20.setText("Phone :");

        jLabel21.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(153, 0, 51));
        jLabel21.setText("Salary :");

        jLabel22.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(153, 0, 51));
        jLabel22.setText("Join-Date :");

        jLabel23.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(153, 0, 51));
        jLabel23.setText("Specifications :");

        trainerUpdate.setBackground(new java.awt.Color(153, 0, 51));
        trainerUpdate.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        trainerUpdate.setForeground(new java.awt.Color(255, 255, 255));
        trainerUpdate.setText("UPDATE");
        trainerUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        trainerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerUpdateActionPerformed(evt);
            }
        });

        updNametext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        updNametext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updNametextActionPerformed(evt);
            }
        });

        updEmailtext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        updPhonetext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        updPhonetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updPhonetextActionPerformed(evt);
            }
        });

        updSalarytext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        updJoindatetext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        updJoindatetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updJoindatetextActionPerformed(evt);
            }
        });

        updSpectext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 39, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updPhonetext)
                    .addComponent(updNametext)
                    .addComponent(updEmailtext, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updSpectext, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updJoindatetext, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(updSalarytext, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxUpdateTID, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(trainerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUpdateTID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updNametext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updEmailtext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updPhonetext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updSalarytext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updJoindatetext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addComponent(updSpectext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(trainerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(trainer_back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(279, 279, 279))
                                    .addComponent(jLabel5)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonSort, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSpecializationSort, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(409, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSort, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSpecializationSort, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trainer_back, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(255, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1936, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false","root","swasthik@52");

    Statement st = con.createStatement();
    String sql = "SELECT * FROM trainers";
    ResultSet rs = st.executeQuery(sql);

    // Clear existing data outside the loop
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);

    while (rs.next()) {
        int tID = rs.getInt("T_ID");
        String tName = rs.getString("Tname");
        String email = rs.getString("email");
        String phone = rs.getString("phone");
        int salary = rs.getInt("salary");
        java.sql.Date joinDate = rs.getDate("join_date");
        String specialization = rs.getString("specialization");

        // Add a new row to the JTable
        model.addRow(new Object[]{tID, tName, email, phone,salary,joinDate,specialization});
    }

    con.close();
} catch (Exception e) {
    System.out.println(e.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSortActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBoxSortActionPerformed

    private void jButtonSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortActionPerformed
        // TODO add your handling code here:
         try {
    String selectedOption = (String) jComboBoxSort.getSelectedItem();

    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

    Statement stm = con.createStatement();
    ResultSet rs = null;

    String sql = "";

    if ("Salary ( Min - Max)".equalsIgnoreCase(selectedOption)) {
        sql = "SELECT * FROM trainers ORDER BY salary ASC";
    } else if ("Salary ( Max-Min)".equalsIgnoreCase(selectedOption)) {
        sql = "SELECT * FROM trainers ORDER BY salary DESC";
    } else if ("Join_Date(Aescending)".equalsIgnoreCase(selectedOption)) {
        sql = "SELECT * FROM trainers ORDER BY join_date ASC";
    } else if ("Join_Date(Descending)".equalsIgnoreCase(selectedOption)) {
        sql = "SELECT * FROM trainers ORDER BY STR_TO_DATE(join_date, '%Y-%m-%d') DESC";
    }

    System.out.println("Executing Query: " + sql); // Print the SQL query to the console

    if (!sql.isEmpty()) {
        rs = stm.executeQuery(sql);
    }

    if (rs != null) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            int tID = rs.getInt("T_ID");
            String tName = rs.getString("Tname");
            String email = rs.getString("email");
            String phone = rs.getString("phone");
            double salary = rs.getDouble("salary");
            Date joinDate = rs.getDate("join_date");
            String specialization = rs.getString("Specialization");

            model.addRow(new Object[]{tID, tName, email, phone, salary, joinDate, specialization});
        }

        con.close();
    }
} catch (Exception e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_jButtonSortActionPerformed

    private void jButtonSpecializationSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSpecializationSortActionPerformed
        // TODO add your handling code here:
        try {
    String specializationFilter = jTextFieldSpecialization.getText().trim(); // Get the entered specialization

    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

    Statement stm = con.createStatement();
    ResultSet rs = null;

    String sql = "";

    // Add specialization filter to the query
    if (!specializationFilter.isEmpty()) {
        sql = "SELECT * FROM trainers WHERE Specialization = '" + specializationFilter + "'";
    } else {
        sql = "SELECT * FROM trainers";
    }

    System.out.println("Executing Query: " + sql);

    if (!sql.isEmpty()) {
        rs = stm.executeQuery(sql);

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            // Populate the table with the filtered data
            int tID = rs.getInt("T_ID");
            String tName = rs.getString("Tname");
            String email = rs.getString("email");
            String phone = rs.getString("phone");
            double salary = rs.getDouble("salary");
            Date joinDate = rs.getDate("join_date");
            String specialization = rs.getString("Specialization");

            model.addRow(new Object[]{tID, tName, email, phone, salary, joinDate, specialization});
        }

        con.close();
    }
} catch (Exception e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_jButtonSpecializationSortActionPerformed

    private void trainer_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainer_backActionPerformed
        // TODO add your handling code here:
        dispose();
        HomePage h = new HomePage(b);
        h.show();
    }//GEN-LAST:event_trainer_backActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:
        try {
        // Retrieve data from text fields
        String tName = textFieldName.getText();
        String email = textFieldEmail.getText();
        String phone = textFieldPhone.getText();

        // Check if the salary field is empty
        String salaryText = textFieldSalary.getText();
        if(b==1){
        if (salaryText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill all the details", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if the salary field is empty
        }

        double salary;
        try {
            salary = Double.parseDouble(salaryText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid salary format. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if there's an issue parsing the salary
        }

        String joinDate = textFieldJoinDate.getText();

        // Check if the phone field contains only digits
        if (!phone.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Invalid phone number. Please enter only digits.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if phone number contains non-digits
        }

        // Check if the join date is in the proper format (yyyy-mm-dd)
        if (!isValidDateFormat(joinDate)) {
            JOptionPane.showMessageDialog(null, "Invalid date format. Please enter the date in YYYY-MM-DD format.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if the date format is invalid
        }

        String specialization = textFieldSpecialization.getText();

        // Check if any other field is empty
        if (tName.isEmpty() || email.isEmpty() || phone.isEmpty() || joinDate.isEmpty() || specialization.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill all the details", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if any other field is empty
        }

        // Establish database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Create and execute the SQL INSERT statement
        String sql = "INSERT INTO trainers (Tname, email, phone, salary, join_date, specialization) VALUES (?, ?, ?, ?, ?, ?)";
        try (PreparedStatement pstmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
            pstmt.setString(1, tName);
            pstmt.setString(2, email);
            pstmt.setString(3, phone);
            pstmt.setDouble(4, salary);
            pstmt.setString(5, joinDate);
            pstmt.setString(6, specialization);

            // Execute the INSERT statement
            int rowsInserted = pstmt.executeUpdate();

            if (rowsInserted > 0) {
                // Display a popup message
                JOptionPane.showMessageDialog(null, "Trainer inserted successfully!");
                refreshTrainersTable();
                textFieldName.setText("");
                textFieldEmail.setText("");
                textFieldPhone.setText("");
                textFieldSalary.setText("");
                textFieldJoinDate.setText("");
                textFieldSpecialization.setText("");
            } else {
                System.out.println("Failed to insert trainer details. No rows affected.");
            }
        }
        populateTrainerIDs();
        // Close the database connection
        con.close();
        }else{
            JOptionPane.showMessageDialog(null, "Members do not have permission to insert.", "Permission Denied", JOptionPane.ERROR_MESSAGE);
            refreshTrainersTable();
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}

private boolean isValidDateFormat(String date) {
    try {
        LocalDate.parse(date, DateTimeFormatter.ISO_DATE);
        return true;
    } catch (DateTimeParseException e) {
        return false;
    }
    }//GEN-LAST:event_InsertActionPerformed

    private void textFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPhoneActionPerformed

    private void textFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldEmailActionPerformed

    private void textFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNameActionPerformed

    private void textFieldSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldSalaryActionPerformed

    private void trainerDEL_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerDEL_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainerDEL_TextFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String deleteTID = trainerDEL_TextField.getText();

    // Check if the T_ID is empty
    if(b==1){
    if (deleteTID.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Enter a Trainer ID to delete", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Call the deleteTrainer method to perform the deletion
    deleteTrainer(deleteTID);
    populateTrainerIDs();
    }else{
            JOptionPane.showMessageDialog(null, "Members do not have permission to delete.", "Permission Denied", JOptionPane.ERROR_MESSAGE);
            refreshTrainersTable();
        }
}
    

// Method to delete a trainer based on T_ID
private void deleteTrainer(String tID) {
    try {
        // Establish a database connection
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Create and execute the SQL DELETE statement
        String sql = "DELETE FROM trainers WHERE T_ID = ?";
        try (PreparedStatement pstmt = con.prepareStatement(sql)) {
            pstmt.setString(1, tID);

            // Execute the DELETE statement
            int rowsDeleted = pstmt.executeUpdate();

            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Trainer Deleted successfully!");
                System.out.println("Trainer with T_ID " + tID + " deleted successfully!");
                // Refresh the JTable to reflect the changes
                refreshTrainersTable();
                // Optionally, clear the text field after successful deletion
                trainerDEL_TextField.setText("");
            } else {
                System.out.println("No trainer found with T_ID " + tID);
                JOptionPane.showMessageDialog(null, "No trainer found with T_ID " + tID, "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }

        // Close the database connection
        con.close();
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error deleting trainer. Check the console for details.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void updNametextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updNametextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updNametextActionPerformed

    private void updJoindatetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updJoindatetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updJoindatetextActionPerformed

    private void updPhonetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updPhonetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updPhonetextActionPerformed

    private void trainerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerUpdateActionPerformed
        // TODO add your handling code here:
     try {
        // Retrieve data from text fields
        String tName = updNametext.getText();
        String email = updEmailtext.getText();
        String phone = updPhonetext.getText();
        String salaryText = updSalarytext.getText();
        String joinDate = updJoindatetext.getText();
        String specialization = updSpectext.getText();
        
        if(b==1){

        // Check if any field is empty
        if (tName.isEmpty() || email.isEmpty() || phone.isEmpty() || salaryText.isEmpty() || joinDate.isEmpty() || specialization.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter all the details", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if any field is empty
        }

        // Check if the phone field contains only digits
        if (!phone.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Invalid phone number. Please enter only digits.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if phone number contains non-digits
        }

        double salary;
        try {
            salary = Double.parseDouble(salaryText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid salary format. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if there's an issue parsing the salary
        }

        // Check if the join date is in the proper format (yyyy-mm-dd)
        if (!isValidDateFormat(joinDate)) {
            JOptionPane.showMessageDialog(null, "Incorrect date format. Enter in yyyy-mm-dd.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if the date format is invalid
        }

        // Establish database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52")) {
            // Execute SQL Update Statement
            String updateSql = "UPDATE trainers SET Tname = ?, email = ?, phone = ?, salary = ?, join_date = ?, specialization = ? WHERE T_ID = ?";
            try (PreparedStatement pstmt = con.prepareStatement(updateSql)) {
                String selectedTrainerID = jComboBoxUpdateTID.getSelectedItem().toString();

                pstmt.setString(1, tName);
                pstmt.setString(2, email);
                pstmt.setString(3, phone);
                pstmt.setDouble(4, salary);
                pstmt.setString(5, joinDate);
                pstmt.setString(6, specialization);
                pstmt.setString(7, selectedTrainerID);

                int rowsUpdated = pstmt.executeUpdate();

                if (rowsUpdated > 0) {
                    System.out.println("Trainer details updated successfully!");
                    JOptionPane.showMessageDialog(null, "Trainer updated successfully!");
                    // Optionally, you can display a success message or perform additional actions
                    refreshTrainersTable();
                    updNametext.setText("");
                    updEmailtext.setText("");
                    updPhonetext.setText("");
                    updSalarytext.setText("");
                    updJoindatetext.setText("");
                    updSpectext.setText("");
                } else {
                    System.out.println("Failed to update trainer details. No rows affected.");
                    // Optionally, you can display an error message or perform additional actions
                }
            }
        }
        populateTrainerIDs();// Update the JComboBox after successful update
        }else{
            JOptionPane.showMessageDialog(null, "Members do not have permission to update.", "Permission Denied", JOptionPane.ERROR_MESSAGE);
            refreshTrainersTable();
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }//GEN-LAST:event_trainerUpdateActionPerformed

    private void jComboBoxUpdateTIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUpdateTIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxUpdateTIDActionPerformed

private void refreshTrainersTable() {
    // Implement code to refresh the JTable (re-fetch data from the database and update the table model)
    // For example, if you have a method 'fetchTrainersData()' to fetch data, call it here
    // fetchTrainersData();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear existing data
    fetchTrainersData();
    // And then update the JTable model
    // jTable1.setModel(new DefaultTableModel(data, columnNames))
}
private void fetchTrainersData() {
    try {
        // Establish a database connection
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Create and execute the SQL SELECT statement
        String sql = "SELECT * FROM trainers";
        try (Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Clear existing data

            // Iterate through the result set and add rows to the table model
            while (rs.next()) {
                Object[] row = {
                    rs.getString("T_ID"),
                    rs.getString("Tname"),
                    rs.getString("email"),
                    rs.getString("phone"),
                    rs.getDouble("salary"),
                    rs.getString("join_date"),
                    rs.getString("specialization")
                };
                model.addRow(row);
            }
        }

        // Close the database connection
        con.close();
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error fetching trainer data. Check the console for details.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Trainers().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonSort;
    private javax.swing.JButton jButtonSpecializationSort;
    private javax.swing.JComboBox<String> jComboBoxSort;
    private javax.swing.JComboBox<String> jComboBoxUpdateTID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldSpecialization;
    private javax.swing.JTextField textFieldEmail;
    private javax.swing.JTextField textFieldJoinDate;
    private javax.swing.JTextField textFieldName;
    private javax.swing.JTextField textFieldPhone;
    private javax.swing.JTextField textFieldSalary;
    private javax.swing.JTextField textFieldSpecialization;
    private javax.swing.JTextField trainerDEL_TextField;
    private javax.swing.JButton trainerUpdate;
    private javax.swing.JButton trainer_back;
    private javax.swing.JTextField updEmailtext;
    private javax.swing.JTextField updJoindatetext;
    private javax.swing.JTextField updNametext;
    private javax.swing.JTextField updPhonetext;
    private javax.swing.JTextField updSalarytext;
    private javax.swing.JTextField updSpectext;
    // End of variables declaration//GEN-END:variables
}
