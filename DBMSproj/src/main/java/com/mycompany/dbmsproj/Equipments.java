/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.dbmsproj;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SWASTHIK
 */
public class Equipments extends javax.swing.JFrame {
   int b;
    /**
     * Creates new form Equipments
     */
    public Equipments(int a) throws SQLException {
        b=a;
        initComponents();
        populateEquipmentIDs();
        
        setExtendedState(Exercises.MAXIMIZED_BOTH);
        if(b==0){
            jLabel1.setVisible(false);
            jLabel7.setVisible(false);
            jLabel8.setVisible(false);
            jLabel10.setVisible(false);
            jLabel11.setVisible(false);
            eqidTEXT.setVisible(false);
            eqnameTEXT.setVisible(false);
            quantityTEXT.setVisible(false);
            costTEXT.setVisible(false);
            equipmentINSERT.setVisible(false);
            eqid_delTEXT.setVisible(false);
            eqDEL.setVisible(false);
            jLabel13.setVisible(false);
            jLabel15.setVisible(false);
            jLabel14.setVisible(false);
            eqIDcombo.setVisible(false);
            up_eqnameTEXT.setVisible(false);
            jLabel16.setVisible(false);
            up_quantityTEXT.setVisible(false);
            jLabel19.setVisible(false);
            jLabel21.setVisible(false);
            equipmentUpdate.setVisible(false);
            jPanel1.setVisible(false);
            jPanel3.setVisible(false);
            jPanel4.setVisible(false);
        }
    }

    private Equipments() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    private void populateEquipmentIDs() {
    try {
        // Establish database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Clear existing items in the JComboBox
        eqIDcombo.removeAllItems();

        // Execute SQL query to fetch Equipment IDs
        String query = "SELECT Eq_ID FROM equipments";
        try (Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
            while (rs.next()) {
                Object equipmentID = rs.getObject("Eq_ID");
                eqIDcombo.addItem(equipmentID.toString());
            }
        }

        // Close the database connection
        con.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        equipmenttableview = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        eqnameSEARCH = new javax.swing.JButton();
        equipment_back = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eqidTEXT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        eqnameTEXT = new javax.swing.JTextField();
        equipmentINSERT = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        quantityTEXT = new javax.swing.JTextField();
        costTEXT = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        eqid_delTEXT = new javax.swing.JTextField();
        eqDEL = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        equipmentUpdate = new javax.swing.JButton();
        up_eqnameTEXT = new javax.swing.JTextField();
        up_quantityTEXT = new javax.swing.JTextField();
        eqIDcombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        equipmentTable = new javax.swing.JTable();
        eqnameSORT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1920, 1080));

        jPanel2.setBackground(new java.awt.Color(153, 0, 51));
        jPanel2.setPreferredSize(new java.awt.Dimension(960, 1080));

        equipmenttableview.setBackground(new java.awt.Color(204, 204, 204));
        equipmenttableview.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        equipmenttableview.setText("View All");
        equipmenttableview.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        equipmenttableview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipmenttableviewActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Filters : ");

        jLabel3.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Eq_Name :");

        eqnameSEARCH.setBackground(new java.awt.Color(204, 204, 204));
        eqnameSEARCH.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        eqnameSEARCH.setText("Search");
        eqnameSEARCH.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        eqnameSEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqnameSEARCHActionPerformed(evt);
            }
        });

        equipment_back.setBackground(new java.awt.Color(204, 204, 204));
        equipment_back.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        equipment_back.setText("<");
        equipment_back.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        equipment_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipment_backActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Equipment Management");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 51), 2));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setText("ADD New Equipment : ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 41));

        jLabel7.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("EQ_ID: ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 60, 36));

        eqidTEXT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eqidTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        eqidTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqidTEXTActionPerformed(evt);
            }
        });
        jPanel1.add(eqidTEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 143, 40));

        jLabel8.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 51));
        jLabel8.setText("Eq_Name :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 80, 35));

        eqnameTEXT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eqnameTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        eqnameTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqnameTEXTActionPerformed(evt);
            }
        });
        jPanel1.add(eqnameTEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 143, 40));

        equipmentINSERT.setBackground(new java.awt.Color(153, 0, 51));
        equipmentINSERT.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        equipmentINSERT.setForeground(new java.awt.Color(255, 255, 255));
        equipmentINSERT.setText("INSERT");
        equipmentINSERT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        equipmentINSERT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipmentINSERTActionPerformed(evt);
            }
        });
        jPanel1.add(equipmentINSERT, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 70, 40));

        jLabel11.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 51));
        jLabel11.setText("Cost :");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 60, 40));

        jLabel10.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 51));
        jLabel10.setText("Quantity :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 80, 36));

        quantityTEXT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        quantityTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        quantityTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTEXTActionPerformed(evt);
            }
        });
        jPanel1.add(quantityTEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 140, 40));

        costTEXT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        costTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(costTEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 140, 40));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 51), 2));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 0, 51));
        jLabel13.setText("DELETE Equipment : ");

        jLabel14.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 0, 51));
        jLabel14.setText("Enter EQ_ID :");

        eqid_delTEXT.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        eqid_delTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        eqid_delTEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqid_delTEXTActionPerformed(evt);
            }
        });

        eqDEL.setBackground(new java.awt.Color(153, 0, 51));
        eqDEL.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        eqDEL.setForeground(new java.awt.Color(255, 255, 255));
        eqDEL.setText("DELETE");
        eqDEL.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        eqDEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqDELActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addContainerGap(94, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eqid_delTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(eqDEL, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eqid_delTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(eqDEL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 51), 2));
        jPanel4.setForeground(new java.awt.Color(153, 0, 51));

        jLabel15.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 0, 51));
        jLabel15.setText("UPDATE Equipment : ");

        jLabel16.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 0, 51));
        jLabel16.setText("Select : ");

        jLabel19.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 0, 51));
        jLabel19.setText("Eq_Name :");

        jLabel21.setFont(new java.awt.Font("STXihei", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(153, 0, 51));
        jLabel21.setText("Quantity :");

        equipmentUpdate.setBackground(new java.awt.Color(153, 0, 51));
        equipmentUpdate.setFont(new java.awt.Font("STXihei", 1, 12)); // NOI18N
        equipmentUpdate.setForeground(new java.awt.Color(255, 255, 255));
        equipmentUpdate.setText("UPDATE");
        equipmentUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        equipmentUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipmentUpdateActionPerformed(evt);
            }
        });

        up_eqnameTEXT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        up_eqnameTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        up_quantityTEXT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        up_quantityTEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        eqIDcombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eqIDcombo.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel16)
                        .addGap(31, 31, 31)
                        .addComponent(eqIDcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(up_eqnameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(up_quantityTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(equipmentUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(eqIDcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(up_quantityTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(up_eqnameTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(equipmentUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        equipmentTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        equipmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "EQ_ID", "Eq_name", "Quantity", "Cost"
            }
        ));
        jScrollPane2.setViewportView(equipmentTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(equipmenttableview, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(equipment_back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel5)))
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eqnameSORT, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(eqnameSEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(395, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(equipment_back, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(equipmenttableview, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eqnameSEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eqnameSORT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(248, 248, 248)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(247, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void equipmenttableviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipmenttableviewActionPerformed
        // TODO add your handling code here:
        try {
    // Establish database connection
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false", "root", "swasthik@52");

    // Create and execute SQL query
    String sql = "SELECT * FROM equipments";
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);

    // Clear existing data in the table
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) equipmentTable.getModel();
    model.setRowCount(0);

    // Iterate through the result set and populate the table
    while (rs.next()) {
        String eqID = rs.getString("Eq_ID");
        String quantity = rs.getString("Quantity");
        String cost = rs.getString("Cost");
        String eqName = rs.getString("Eq_name");

        // Add a new row to the table
        model.addRow(new Object[]{eqID, eqName, quantity, cost });
    }

    // Close the connection
    con.close();
} catch (Exception e) {
    System.out.println(e.getMessage());
}

    }//GEN-LAST:event_equipmenttableviewActionPerformed

    private void eqnameSEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqnameSEARCHActionPerformed
        // TODO add your handling code here:
        try {
    String eqNameFilter = eqnameSORT.getText().trim(); // Get the entered equipment name

    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

    Statement stm = con.createStatement();
    ResultSet rs = null;

    String sql = "";

    // Add equipment name filter to the query
    if (!eqNameFilter.isEmpty()) {
        sql = "SELECT * FROM equipments WHERE Eq_name LIKE '%" + eqNameFilter + "%'";
    } else {
        sql = "SELECT * FROM equipments";
    }

    System.out.println("Executing Query: " + sql);

    if (!sql.isEmpty()) {
        rs = stm.executeQuery(sql);

        DefaultTableModel model = (DefaultTableModel) equipmentTable.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            // Populate the table with the filtered data
            String eqID = rs.getString("Eq_ID");
            String quantity = rs.getString("Quantity");
            String cost = rs.getString("Cost");
            String eqName = rs.getString("Eq_name");

            model.addRow(new Object[]{eqID,eqName, quantity, cost});
        }

        con.close();
    }
} catch (Exception e) {
    e.printStackTrace();
}


    }//GEN-LAST:event_eqnameSEARCHActionPerformed

    private void equipment_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipment_backActionPerformed
        // TODO add your handling code here:
        dispose();
        HomePage h = new HomePage(b);
        h.show();
    }//GEN-LAST:event_equipment_backActionPerformed

    private void eqidTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqidTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eqidTEXTActionPerformed

    private void eqnameTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqnameTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eqnameTEXTActionPerformed

    private void equipmentINSERTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipmentINSERTActionPerformed
        // TODO add your handling code here:
        try {
    // Retrieve data from text fields
    String eqId = eqidTEXT.getText();
    String eqName = eqnameTEXT.getText();
    String quantityText = quantityTEXT.getText();
    String costText = costTEXT.getText();

    // Check if any field is empty
    if (b == 1) {
        if (eqId.isEmpty() || eqName.isEmpty() || quantityText.isEmpty() || costText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill all the details", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if any field is empty
        }

        // Parse data to the appropriate types
        int quantity, cost;

try {
    quantity = Integer.parseInt(quantityText);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Invalid format for Quantity. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Exit the method if there's an issue parsing the data
}

try {
    cost = Integer.parseInt(costText);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Invalid format for Cost. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Exit the method if there's an issue parsing the data
}


        // Establish database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Check if the Eq_ID already exists
        if (isEquipmentIDExists(con, eqId)) {
            JOptionPane.showMessageDialog(null, "Equipment with Eq_ID " + eqId + " already exists.", "Error", JOptionPane.ERROR_MESSAGE);
            con.close();
            return;
        }

        // Create and execute the SQL INSERT statement for equipment
        String sql = "INSERT INTO equipments (Eq_ID,Quantity,Cost,Eq_name) VALUES (?, ?, ?, ?)";
        try (PreparedStatement pstmt = con.prepareStatement(sql)) {
            pstmt.setString(1, eqId);
            pstmt.setInt(2, quantity);
            pstmt.setInt(3, cost);
            pstmt.setString(4, eqName);

            // Execute the INSERT statement
            int rowsInserted = pstmt.executeUpdate();

            if (rowsInserted > 0) {
                // Display a popup message
                JOptionPane.showMessageDialog(null, "Equipment inserted successfully!");
                refreshExerciseTable();
                eqidTEXT.setText("");
                eqnameTEXT.setText("");
                quantityTEXT.setText("");
                costTEXT.setText("");

                // Update the equipment IDs in the JComboBox
                populateEquipmentIDs();
            } else {
                System.out.println("Failed to insert equipment details. No rows affected.");
            }
        }
        // Close the database connection
        con.close();
    } else {
        JOptionPane.showMessageDialog(null, "Members do not have permission to insert.", "Permission Denied", JOptionPane.ERROR_MESSAGE);
        refreshExerciseTable();
    }
} catch (Exception ex) {
    ex.printStackTrace();
}


    }//GEN-LAST:event_equipmentINSERTActionPerformed

    private boolean isEquipmentIDExists(Connection con, String equipmentID) throws SQLException {
    String query = "SELECT COUNT(*) FROM equipments WHERE Eq_ID = ?";
    try (PreparedStatement pstmt = con.prepareStatement(query)) {
        pstmt.setString(1, equipmentID);
        try (ResultSet rs = pstmt.executeQuery()) {
            if (rs.next()) {
                int count = rs.getInt(1);
                return count > 0;
            }
        }
    }
    return false;
}

    private void quantityTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTEXTActionPerformed

    private void eqid_delTEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqid_delTEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eqid_delTEXTActionPerformed

    private void eqDELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqDELActionPerformed
        // TODO add your handling code here:
        String deleteeqID = eqid_delTEXT.getText();

        // Check if the T_ID is empty
        if(b==1){
            if (deleteeqID.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter a Subsription ID to delete", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Call the deleteTrainer method to perform the deletion
            deleteEquipment(deleteeqID);
            populateEquipmentIDs();
        }else{
            JOptionPane.showMessageDialog(null, "Members do not have permission to delete.", "Permission Denied", JOptionPane.ERROR_MESSAGE);
            refreshExerciseTable();
        }

        // Method to delete a trainer based on T_ID
        //

    }//GEN-LAST:event_eqDELActionPerformed

    private void deleteEquipment(String equipmentID) {
    try {
        // Establish a database connection
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52")) {
            // Create and execute the SQL DELETE statement
            String sql = "DELETE FROM equipments WHERE Eq_ID = ?";
            try (PreparedStatement pstmt = con.prepareStatement(sql)) {
                // Use setObject to handle both string and integer types
                pstmt.setObject(1, equipmentID);

                // Execute the DELETE statement
                int rowsDeleted = pstmt.executeUpdate();

                if (rowsDeleted > 0) {
                    System.out.println("Equipment with Equipment_ID " + equipmentID + " deleted successfully!");
                    JOptionPane.showMessageDialog(null, "Deleted successfully.");

                    // Refresh the JTable to reflect the changes
                    refreshExerciseTable();
                    // Optionally, clear the text field after successful deletion
                    eqid_delTEXT.setText("");
                } else {
                    System.out.println("No Equipment found with Equipment_ID " + equipmentID);
                    JOptionPane.showMessageDialog(null, "No Equipment found with Equipment_ID " + equipmentID, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        // Handle the exception, such as showing an error message
    }
}

    
    private void equipmentUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipmentUpdateActionPerformed
        // TODO add your handling code here:
        try {
    // Retrieve data from text fields
    String eqName = up_eqnameTEXT.getText();
    String quantityText = up_quantityTEXT.getText();

    // Get the selected Eq_ID from the JComboBox
    String selectedEquipmentID = (String) eqIDcombo.getSelectedItem();

    if (b == 1) {
        // Check if any field is empty
        if (selectedEquipmentID.isEmpty() || eqName.isEmpty() || quantityText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter all the details", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if any field is empty
        }

        // Parse data to the appropriate types
        int quantity;

        try {
            quantity = Integer.parseInt(quantityText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid format. Please enter a valid number for Quantity.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if there's an issue parsing the data
        }

        // Establish database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52")) {
            // Execute SQL Update Statement
            String updateSql = "UPDATE equipments SET Eq_Name = ?, Quantity = ? WHERE Eq_ID = ?";
            try (PreparedStatement pstmt = con.prepareStatement(updateSql)) {
                pstmt.setString(1, eqName);
                pstmt.setInt(2, quantity);
                pstmt.setString(3, selectedEquipmentID); // Use the selected Eq_ID

                int rowsUpdated = pstmt.executeUpdate();

                if (rowsUpdated > 0) {
                    System.out.println("Equipment details updated successfully!");
                    JOptionPane.showMessageDialog(null, "Equipment updated successfully!");
                    // Optionally, you can display a success message or perform additional actions
                    refreshExerciseTable();
                    up_eqnameTEXT.setText("");
                    up_quantityTEXT.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "No equipment found with the selected ID. Update failed.", "Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println("Failed to update equipment details. No rows affected.");
                    // Optionally, you can display an error message or perform additional actions
                }
            }
        }
        populateEquipmentIDs(); // Update the JComboBox after a successful update
    } else {
        JOptionPane.showMessageDialog(null, "Members do not have permission to update.", "Permission Denied", JOptionPane.ERROR_MESSAGE);
        refreshExerciseTable();
    }
} catch (Exception ex) {
    ex.printStackTrace();
}


    }//GEN-LAST:event_equipmentUpdateActionPerformed

    private void refreshExerciseTable() {
    DefaultTableModel model = (DefaultTableModel) equipmentTable.getModel();
    model.setRowCount(0); // Clear existing data
    fetchEquipmentData();
}
    
    private void fetchEquipmentData() {
    try {
        // Establish a database connection
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gym?useSSL=false&allowPublicKeyRetrieval=true", "root", "swasthik@52");

        // Create and execute the SQL SELECT statement
        String sql = "SELECT * FROM equipments";
        try (Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            DefaultTableModel model = (DefaultTableModel) equipmentTable.getModel();
            model.setRowCount(0); // Clear existing data

            // Iterate through the result set and add rows to the table model
            while (rs.next()) {
                Object[] row = {
                    rs.getString("Eq_ID"),
                    rs.getString("Eq_Name"),
                    rs.getInt("Quantity"),
                    rs.getInt("Cost")
                };
                model.addRow(row);
            }
        }

        // Close the database connection
        con.close();
    } catch (Exception ex) {
        ex.printStackTrace();
        // Handle the exception, such as showing an error message
    }
}

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Equipments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField costTEXT;
    private javax.swing.JButton eqDEL;
    private javax.swing.JComboBox<String> eqIDcombo;
    private javax.swing.JTextField eqidTEXT;
    private javax.swing.JTextField eqid_delTEXT;
    private javax.swing.JButton eqnameSEARCH;
    private javax.swing.JTextField eqnameSORT;
    private javax.swing.JTextField eqnameTEXT;
    private javax.swing.JButton equipmentINSERT;
    private javax.swing.JTable equipmentTable;
    private javax.swing.JButton equipmentUpdate;
    private javax.swing.JButton equipment_back;
    private javax.swing.JButton equipmenttableview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField quantityTEXT;
    private javax.swing.JTextField up_eqnameTEXT;
    private javax.swing.JTextField up_quantityTEXT;
    // End of variables declaration//GEN-END:variables
}
